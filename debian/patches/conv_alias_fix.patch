diff --git a/include/armadillo_bits/glue_conv_meat.hpp b/include/armadillo_bits/glue_conv_meat.hpp
index eb515c4a..d3b7a7f2 100644
--- a/include/armadillo_bits/glue_conv_meat.hpp
+++ b/include/armadillo_bits/glue_conv_meat.hpp
@@ -28,8 +28,6 @@ glue_conv::apply(Mat<eT>& out, const Mat<eT>& A, const Mat<eT>& B, const bool A_
   const uword   x_n_elem    = x.n_elem;
   const uword out_n_elem    = ((h_n_elem + x_n_elem) > 0) ? (h_n_elem + x_n_elem - 1) : uword(0);
   
-  (A_is_col) ? out.set_size(out_n_elem, 1) : out.set_size(1, out_n_elem);
-  
   if( (h_n_elem == 0) || (x_n_elem == 0) )  { out.zeros(); return; }
   
   
@@ -52,6 +50,8 @@ glue_conv::apply(Mat<eT>& out, const Mat<eT>& A, const Mat<eT>& B, const bool A_
   arrayops::copy( &(xx_mem[h_n_elem_m1]), x_mem, x_n_elem );
   
   
+  (A_is_col) ? out.set_size(out_n_elem, 1) : out.set_size(1, out_n_elem);
+  
   eT* out_mem = out.memptr();
         
   for(uword i=0; i < out_n_elem; ++i)
@@ -132,10 +132,9 @@ glue_conv2::apply(Mat<eT>& out, const Mat<eT>& A, const Mat<eT>& B)
   const uword out_n_rows = ((W.n_rows + G.n_rows) > 0) ? (W.n_rows + G.n_rows - 1) : uword(0);
   const uword out_n_cols = ((W.n_cols + G.n_cols) > 0) ? (W.n_cols + G.n_cols - 1) : uword(0);
   
-  out.set_size( out_n_rows, out_n_cols );
-  
   if(G.is_empty() || W.is_empty())  { out.zeros(); return; }
   
+  
   Mat<eT> H(G.n_rows, G.n_cols);  // flipped filter coefficients
   
   const uword H_n_rows = H.n_rows;
@@ -159,6 +158,9 @@ glue_conv2::apply(Mat<eT>& out, const Mat<eT>& A, const Mat<eT>& B)
   
   X( H_n_rows_m1, H_n_cols_m1, arma::size(W) ) = W;  // zero padded version of 2D image
   
+  
+  out.set_size( out_n_rows, out_n_cols );
+  
   for(uword col=0; col < out_n_cols; ++col)
     {
     eT* out_colptr = out.colptr(col);
