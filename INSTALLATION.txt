If you installed Armadillo using a .rpm package, you don't need
to do anything else.  Otherwise read on.

There are two ways of installing Armadillo:
(i)  via CMake
(ii) manual installation

The functionality of Armadillo will be affected by what
libraries are present on your system.  It's recommended
that the following libraries are installed: LAPACK, BLAS
ATLAS (including the header files) and Boost.  Read the 
"Compiling the examples ..." section (below) for more info.


CMake based installation
------------------------
"cmake" needs to be present on your system.  It's available
as a pre-built package in major Linux and UNIX distributions,
though the package may need to be explicitly installed.
If you cannot find a pre-built package for your system,
CMake can be downloaded from http://www.cmake.org

To install Armadillo, open a shell with administrator privileges
(e.g. root), change into the directory that was created by unpacking
the armadillo archive, and type the following commands:

cmake .
make 
make install

CMake will figure out what libraries are installed
and modify Armadillo's configuration correspondingly.

If you don't have administrator privileges, change
make install
to
make install DESTDIR=another_location

where "another_location" is a directory where you have
write access.


Manual installation
-------------------

Modify "src/include/armadillo_bits/config.hpp" to indicate which
libraries are present on your system and then copy the entire
"src/include" directory to a convenient location.  Note that
to use the ATLAS and Boost libraries, their header files also
need to be present.


Compiling the examples and your own programs that use Armadillo
---------------------------------------------------------------

If Armadillo header files were installed in a non-standard location,
you will need to modify "examples/Makefile" to tell tell the compiler
where they are (for GCC this is done using the -I switch).

If Armadillo was installed manually, you will also need to
explicitly link your programs with the libraries that were
specified in "armadillo_config.hpp".  For example, if you
specified that LAPACK and BLAS are available, under Linux
you would use "-llapack -lblas" instead of "-larmadillo".
Under MacOS, you would use "-framework Accelerate"
instead of "-larmadillo".

"example1.cpp" doesn't need any external libraries.
"example2.cpp" requires the LAPACK library. You'll get errors
at compile or run time if LAPACK (or its emulation via ATLAS) 
is not installed.
